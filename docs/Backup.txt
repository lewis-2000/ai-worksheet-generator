<?php
/**
 * Plugin Name: AI Worksheet Generator
 * Plugin URI:  https://yourwebsite.com
 * Description: Generate AI-powered worksheets.
 * Version:     1.0.1
 * Author:      Lewis Ng'ang'a
 * Author URI:  https://yourwebsite.com
 * License:     GPL2
 */

if (!defined('ABSPATH')) {
    exit; // Prevent direct access
}

require_once ABSPATH . 'wp-admin/includes/file.php'; // Needed for file handling
require_once ABSPATH . 'wp-admin/includes/media.php'; // Needed for uploading files
require_once ABSPATH . 'wp-admin/includes/image.php'; // Needed for attachment metadata

// Include dompdf for PDF generation
require_once plugin_dir_path(__FILE__) . 'vendor/autoload.php';
use Dompdf\Dompdf;
use Dompdf\Options;

class AI_Worksheet_Generator
{

    public function enqueue_assets()
    {
        wp_enqueue_style('bootstrap-css', 'https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css');
        wp_enqueue_script('bootstrap-js', 'https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js', array('jquery'), null, true);
        wp_enqueue_style('awg-styles', plugin_dir_url(__FILE__) . 'css/styles.css');

    }

    public function __construct()
    {
        add_action('admin_enqueue_scripts', array($this, 'enqueue_assets'));
        add_action('wp_enqueue_scripts', array($this, 'enqueue_assets')); // If using front-end
        add_action('admin_menu', array($this, 'add_admin_menu'));
        add_action('admin_init', array($this, 'register_settings'));
        add_action('wp_ajax_generate_ai_response', array($this, 'generate_ai_response'));
        add_action('wp_ajax_fetch_latest_pdf', array($this, 'fetch_latest_pdf'));
        add_action('wp_ajax_nopriv_generate_ai_response', array($this, 'generate_ai_response'));
        add_shortcode('awg_generate_html', array($this, 'display_html_response'));
        add_shortcode('awg_view_pdf', array($this, 'view_pdf'));
    }


    public function add_admin_menu()
    {
        add_menu_page(
            'AI Worksheet Generator',
            'Worksheet AI',
            'manage_options',
            'ai-worksheet-generator',
            array($this, 'admin_page'),
            'dashicons-smiley'
        );
    }

    public function admin_page()
    {
        ?>
        <div class="wrap">
            <h2>AI Worksheet Generator</h2>

            <form method="post" action="options.php">
                <?php
                settings_fields('awg_settings_group');
                do_settings_sections('awg_settings_page');
                submit_button();
                ?>
            </form>
        </div>
        <?php
    }

    public function register_settings()
    {
        register_setting('awg_settings_group', 'openai_api_key');
        add_settings_section('awg_main_section', 'API Settings', null, 'awg_settings_page');
        add_settings_field('openai_api_key', 'OpenAI API Key', array($this, 'api_key_field'), 'awg_settings_page', 'awg_main_section');
    }

    public function api_key_field()
    {
        $api_key = get_option('openai_api_key', '');
        echo "<input type='text' name='openai_api_key' value='" . esc_attr($api_key) . "' style='width: 100%;'>";
    }

    public function generate_ai_response()
    {
        if (!isset($_POST['prompt'])) {
            wp_send_json_error(['message' => 'No prompt provided']);
        }

        $api_key = get_option('openai_api_key');
        if (!$api_key) {
            wp_send_json_error(['message' => 'OpenAI API key is not set']);
        }

        $prompt = sanitize_text_field($_POST['prompt']);

        $response = wp_remote_post('https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key=' . $api_key, array(
            'body' => json_encode(array(
                'contents' => array(
                    array(
                        'parts' => array(array("text" => $prompt))
                    )
                )
            )),
            'headers' => array(
                'Content-Type' => 'application/json'
            ),
            'timeout' => 30 // Increase timeout to 30 seconds
        ));




        if (is_wp_error($response)) {
            wp_send_json_error(['message' => 'API request failed: ' . $response->get_error_message()]);
        }

        $body = json_decode(wp_remote_retrieve_body($response), true);

        if (!$body || !isset($body['candidates'][0]['content']['parts'][0]['text'])) {
            wp_send_json_error(['message' => 'Invalid response from Gemini. Response: ' . print_r($body, true)]);
        }

        $generated_html = wp_kses_post(nl2br($body['candidates'][0]['content']['parts'][0]['text']));

        $pdf_url = $this->generate_pdf($generated_html);

        wp_send_json_success(['html' => $generated_html, 'pdf_url' => $pdf_url]);
    }


    private function generate_pdf($html_content)
    {
        $options = new Options();
        $options->set('defaultFont', 'Arial');
        $dompdf = new Dompdf($options);
        $dompdf->loadHtml($html_content);
        $dompdf->setPaper('A4', 'portrait');
        $dompdf->render();

        $upload_dir = wp_upload_dir();
        $current_user = wp_get_current_user();
        $username = sanitize_file_name($current_user->user_login);
        $pdf_path = $upload_dir['path'] . '/' . $username . '-' . time() . '.pdf';
        file_put_contents($pdf_path, $dompdf->output());

        $file_array = array(
            'name' => basename($pdf_path),
            'tmp_name' => $pdf_path,
        );

        $attachment_id = media_handle_sideload($file_array, 0);

        if (is_wp_error($attachment_id)) {
            return '';
        }

        return wp_get_attachment_url($attachment_id);
    }

    public function fetch_latest_pdf()
    {
        if (!is_user_logged_in()) {
            wp_send_json_error(['message' => 'User not logged in']);
        }

        $current_user = wp_get_current_user();
        $username = sanitize_file_name($current_user->user_login);

        $args = array(
            'post_type' => 'attachment',
            'post_mime_type' => 'application/pdf',
            'posts_per_page' => 1,
            'orderby' => 'date',
            'order' => 'DESC',
            'meta_query' => array(
                array(
                    'key' => '_wp_attached_file',
                    'value' => $username . '-', // Ensure it matches username in filename
                    'compare' => 'LIKE'
                )
            )
        );

        $latest_pdf = get_posts($args);

        if (empty($latest_pdf)) {
            wp_send_json_error(['message' => 'No PDFs found']);
        }

        $pdf_url = wp_get_attachment_url($latest_pdf[0]->ID);
        wp_send_json_success(['pdf_url' => $pdf_url]);
    }



    public function display_html_response()
    {
        ob_start(); ?>
        <div class="hero-section container mt-4">
            <div class="row align-items-center">
                <div class="col-md-6">
                    <h1 class="display-4">Create Your Worksheet</h1>
                    <p class="lead">Generate AI-powered worksheets or select from our templates to get started quickly.</p>
                    <button id="select-template-btn" class="btn btn-secondary me-2 function-button">Select Template</button>
                    <button id="create-with-ai-btn" class="btn btn-primary function-button">Create with AI</button>
                </div>
                <div class="col-md-6 hero-image-container">
                    <img src="<?php echo plugin_dir_url(__FILE__) . 'images/bgh.png'; ?>" class="hero-image"
                        alt="Worksheet Image">
                </div>
            </div>
        </div>

        <!-- Full-Screen AI Overlay -->
        <div id="ai-overlay" class="ai-overlay container">
            <div class="ai-top-bar">
                <span class="ai-logo">AI Worksheet Generator</span>
                <div class="auth-links">
                    <a href="#" class="login-link">Login</a>
                    <a href="#" class="signup-link">Sign Up</a>
                    <span class="close-btn" id="close-ai-overlay">&times;</span>
                </div>
            </div>
            <div class="ai-content">
                <div class="ai-input-section">
                    <h2>Enter Your Prompt</h2>
                    <input type="text" id="awg-prompt" class="form-control" placeholder="Enter worksheet topic...">
                    <button id="awg-generate-btn" class="btn btn-primary w-100 mt-2">Generate Worksheet</button>


                </div>
                <div class="ai-preview-section">
                    <h2>Live Preview</h2>
                    <div id="awg-html-output" class="preview-box"></div>
                    <div id="awg-pdf-container" class="mt-4" style="display: none;">
                        <h3 class="text-center">Generated Worksheet PDF</h3>
                        <iframe id="awg-pdf-frame" class="w-100" style="height: 500px; border: none;">
                            <div id="awg-loading" class="text-center mt-3" style="display: none;">
                                <div class="spinner-border text-primary" role="status">
                                    <span class="visually-hidden">Generating...</span>
                                </div>
                                <p class="mt-2">Generating worksheet, please wait...</p>
                            </div>
                        </iframe>
                        <a id="awg-download-pdf" class="btn btn-success mt-3 w-100" href="#" target="_blank" download>Download
                            PDF</a>
                    </div>
                </div>
            </div>
        </div>

        <script>
            document.getElementById("create-with-ai-btn").addEventListener("click", function () {
                document.getElementById("ai-overlay").style.display = "flex";
            });

            document.getElementById("close-ai-overlay").addEventListener("click", function () {
                document.getElementById("ai-overlay").style.display = "none";
            });

            document.getElementById("awg-generate-btn").addEventListener("click", function () {
                let userPrompt = document.getElementById("awg-prompt").value;
                if (!userPrompt) return;

                document.getElementById("awg-loading").style.display = "block";
                document.getElementById("awg-html-output").style.display = "none";
                document.getElementById("awg-pdf-container").style.display = "none";

                fetch("<?php echo admin_url('admin-ajax.php'); ?>", {
                    method: "POST",
                    headers: { "Content-Type": "application/x-www-form-urlencoded" },
                    body: "action=generate_ai_response&prompt=" + encodeURIComponent(userPrompt)
                })
                    .then(response => response.json())
                    .then(jsonData => {
                        document.getElementById("awg-loading").style.display = "none";

                        if (jsonData.success) {
                            document.getElementById("awg-html-output").innerHTML = jsonData.html;
                            document.getElementById("awg-html-output").style.display = "block";

                            let checkPdfInterval = setInterval(() => {
                                fetch("<?php echo admin_url('admin-ajax.php'); ?>?action=fetch_latest_pdf")
                                    .then(response => response.json())
                                    .then(pdfData => {
                                        if (pdfData.success) {
                                            clearInterval(checkPdfInterval);
                                            document.getElementById("awg-pdf-frame").src = pdfData.pdf_url;
                                            document.getElementById("awg-download-pdf").href = pdfData.pdf_url;
                                            document.getElementById("awg-pdf-container").style.display = "block";
                                        }
                                    });
                            }, 3000);
                        } else {
                            alert("Error: " + jsonData.message);
                        }
                    })
                    .catch(error => {
                        document.getElementById("awg-loading").style.display = "none";
                        console.error("Fetch Error:", error);
                        alert("An unexpected error occurred.");
                    });
            });
        </script>
        <?php return ob_get_clean();
    }



    public function view_pdf()
    {
        $pdfs = get_posts([
            'post_type' => 'attachment',
            'post_mime_type' => 'application/pdf',
            'numberposts' => 5
        ]);

        if (empty($pdfs)) {
            return "<p>No PDFs available.</p>";
        }

        $output = "<div class='container mt-4 view-pdf'>
                       <div class='card shadow-sm'>
                           <h2 class='text-center mb-3'>Available PDFs</h2>
                           <ul class='awg-pdf-list'>";
        foreach ($pdfs as $pdf) {
            $output .= "<li><a href='" . esc_url(wp_get_attachment_url($pdf->ID)) . "' target='_blank' class='awg-pdf-item'>" . esc_html($pdf->post_title) . ".pdf" . "</a></li>";
        }
        $output .= "    </ul>
                       </div>
                   </div>";

        return $output;
    }
}

// Initialize the plugin
new AI_Worksheet_Generator();
?>




////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/* Hero Section */
.hero-section {
  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);
  padding: 5px 20px;
  border-radius: 10px;
  height: 75vh;
  display: flex;
  justify-content: space-between;
  overflow: hidden;
}

/* Container for the hero image */
.hero-image-container {
  overflow: hidden; /* Prevents the image from overflowing */
}

/* Hero Image */
.hero-image {
  height: auto; /* Maintains aspect ratio */
  width: 100%; /* Full width */
  object-fit: cover; /* Scales the image to cover the entire container */
}

/* Full-Screen Overlay */
.ai-overlay {
  display: none;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  /* width: 100vw !important;
  height: 100% !important; */
  background-color: rgba(255, 255, 255, 0.9);
  z-index: 1000;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  overflow: hidden;
  transition: all 0.3s ease-in-out;
}

.function-button {
  transition: transform 0.3s ease-in-out;
}
.function-button:hover {
  transform: translateY(-5px);
}

/* Top Bar */
.ai-top-bar {
  width: 100%;
  height: 60px;
  background-color: #333;
  color: white;
  border-bottom: 1px solid black;
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 0 20px;
  font-size: 18px;
  border-radius: 10px 10px 0 0;
}

.ai-logo {
  font-weight: bold;
}

.auth-links a {
  color: white;
  margin-right: 15px;
  text-decoration: none;
}

.auth-links a:hover {
  text-decoration: underline;
}

.close-btn {
  font-size: 24px;
  cursor: pointer;
  color: white;
}

/* Content Sections */
.ai-content {
  display: flex;
  width: 100%;
  max-width: 1200px;
  background: white;
  border-radius: 0 0 10px 10px;
  overflow: hidden;
  height: 80vh;
  box-shadow: 0 0 15px rgba(0, 0, 0, 0.2);
}

.ai-input-section {
  width: 30%;
  padding: 20px;
}
.ai-preview-section {
  width: 70%;
  padding: 20px;
}

.ai-input-section {
  background: #f8f9fa;
  display: flex;
  flex-direction: column;
  justify-content: center;
}

.ai-preview-section {
  background: #fff;
  overflow-y: auto;
  padding: 30px;
}

.preview-box {
  min-height: 300px;
  height: 100%;
  padding: 15px;
  border: 1px solid #ddd;
  background: #f9f9f9;
  border-radius: 5px;
}

.view-pdf {
  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);
  padding: 5px 20px;
  border-radius: 10px;
}

@media screen and (max-width: 768px) {
  .hero-section {
    flex-direction: column;
    padding-top: 45px;
    height: fit-content;
  }
  .ai-content {
    flex-direction: column;
    height: 100vh;
  }

  .ai-input-section,
  .ai-preview-section {
    width: 100%;
  }
}





////////////////////////////////////////////////////////////////// Backup 2 //////////////////////////////////////////////////////////////////
<?php
/**
 * Plugin Name: AI Worksheet Generator
 * Plugin URI:  https://yourwebsite.com
 * Description: Generate AI-powered worksheets.
 * Version:     1.0.1
 * Author:      Lewis Ng'ang'a
 * Author URI:  https://yourwebsite.com
 * License:     GPL2
 */

if (!defined('ABSPATH')) {
    exit; // Prevent direct access
}

require_once ABSPATH . 'wp-admin/includes/file.php'; // Needed for file handling
require_once ABSPATH . 'wp-admin/includes/media.php'; // Needed for uploading files
require_once ABSPATH . 'wp-admin/includes/image.php'; // Needed for attachment metadata

// Include dompdf for PDF generation
require_once plugin_dir_path(__FILE__) . 'vendor/autoload.php';
use Dompdf\Dompdf;
use Dompdf\Options;

class AI_Worksheet_Generator
{

    public function enqueue_assets()
    {
        // Enqueue Tailwind CSS from the official CDN
        wp_enqueue_script('tailwind-config', 'https://cdn.tailwindcss.com', array(), null, false);

        // Add inline script to configure Tailwind before it's used
        wp_add_inline_script('tailwind-config', 'tailwind.config = { theme: { extend: {} } }', 'before');
        wp_enqueue_style('awg-styles', plugin_dir_url(__FILE__) . 'css/styles.css');

    }

    public function __construct()
    {
        add_action('admin_enqueue_scripts', array($this, 'enqueue_assets'));
        add_action('wp_enqueue_scripts', array($this, 'enqueue_assets')); // If using front-end
        add_action('admin_menu', array($this, 'add_admin_menu'));
        add_action('admin_init', array($this, 'register_settings'));
        add_action('wp_ajax_generate_ai_response', array($this, 'generate_ai_response'));
        add_action('wp_ajax_fetch_latest_pdf', array($this, 'fetch_latest_pdf'));
        add_action('wp_ajax_nopriv_generate_ai_response', array($this, 'generate_ai_response'));
        add_action('admin_init', array($this, 'handle_template_upload'));
        add_shortcode('awg_generate_html', array($this, 'display_html_response'));
        add_shortcode('awg_view_pdf', array($this, 'view_pdf'));
    }


    public function add_admin_menu()
    {
        add_menu_page(
            'AI Worksheet Generator',
            'Worksheet AI',
            'manage_options',
            'ai-worksheet-generator',
            array($this, 'admin_page'),
            'dashicons-smiley'
        );
    }

    public function admin_page()
    {
        ?>
        <div class="wrap">
            <h2>AI Worksheet Generator</h2>

            <!-- API Key Section -->
            <form method="post" action="options.php">
                <?php
                settings_fields('awg_settings_group');
                do_settings_sections('awg_settings_page');
                submit_button();
                ?>
            </form>

            <!-- Template & Premade Worksheet Upload Section -->
            <h3>Manage Templates & Premade Worksheets</h3>
            <form method="post" enctype="multipart/form-data">
                <label for="template_name">Name:</label>
                <input type="text" name="template_name" required>

                <label for="template_type">Type:</label>
                <select name="template_type">
                    <option value="template">Template</option>
                    <option value="premadeworksheet">Premade Worksheet</option>
                </select>

                <label for="template_file">Upload HTML File:</label>
                <input type="file" name="template_file" accept=".html" required>

                <label for="template_image">Upload Preview Image:</label>
                <input type="file" name="template_image" accept="image/*" required>

                <input type="submit" name="upload_template" value="Upload">
            </form>

            <!-- Display Existing Templates -->
            <h3>Existing Templates & Worksheets</h3>
            <ul>
                <?php
                $templates = get_option('awg_templates', []);
                foreach ($templates as $template) {
                    echo "<li>{$template['name']} ({$template['type']}) - <a href='{$template['file']}'>View</a> | <img src='{$template['image']}' width='50'></li>";
                }
                ?>
            </ul>
        </div>
        <?php
    }

    public function register_settings()
    {
        register_setting('awg_settings_group', 'openai_api_key');
        register_setting('awg_settings_group', 'awg_templates'); // Store templates
        add_settings_section('awg_main_section', 'API Settings', null, 'awg_settings_page');
        add_settings_field('openai_api_key', 'OpenAI API Key', array($this, 'api_key_field'), 'awg_settings_page', 'awg_main_section');
    }

    public function api_key_field()
    {
        $api_key = get_option('openai_api_key', '');
        echo "<input type='text' name='openai_api_key' value='" . esc_attr($api_key) . "' style='width: 100%;'>";
    }

    // Handle template uploads
    public function handle_template_upload()
    {
        if (isset($_POST['upload_template'])) {
            $name = sanitize_text_field($_POST['template_name']);
            $type = sanitize_text_field($_POST['template_type']);
            $prefix = ($type == 'template') ? 'template-' : 'premadeworksheet-';

            // Handle file upload
            if (!empty($_FILES['template_file']['name']) && !empty($_FILES['template_image']['name'])) {
                $file_id = media_handle_upload('template_file', 0);
                $image_id = media_handle_upload('template_image', 0);

                if (!is_wp_error($file_id) && !is_wp_error($image_id)) {
                    $file_url = wp_get_attachment_url($file_id);
                    $image_url = wp_get_attachment_url($image_id);

                    $templates = get_option('awg_templates', []);
                    $templates[] = [
                        'name' => $prefix . $name,
                        'type' => $type,
                        'file' => $file_url,
                        'image' => $image_url
                    ];
                    update_option('awg_templates', $templates);
                }
            }
        }
    }



    public function generate_ai_response()
    {
        if (!isset($_POST['prompt'])) {
            wp_send_json_error(['message' => 'No prompt provided']);
        }

        $api_key = get_option('openai_api_key');
        if (!$api_key) {
            wp_send_json_error(['message' => 'OpenAI API key is not set']);
        }

        $prompt = sanitize_text_field($_POST['prompt']);

        $response = wp_remote_post('https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key=' . $api_key, array(
            'body' => json_encode(array(
                'contents' => array(
                    array(
                        'parts' => array(array("text" => $prompt))
                    )
                )
            )),
            'headers' => array(
                'Content-Type' => 'application/json'
            ),
            'timeout' => 30 // Increase timeout to 30 seconds
        ));




        if (is_wp_error($response)) {
            wp_send_json_error(['message' => 'API request failed: ' . $response->get_error_message()]);
        }

        $body = json_decode(wp_remote_retrieve_body($response), true);

        if (!$body || !isset($body['candidates'][0]['content']['parts'][0]['text'])) {
            wp_send_json_error(['message' => 'Invalid response from Gemini. Response: ' . print_r($body, true)]);
        }

        $generated_html = wp_kses_post(nl2br($body['candidates'][0]['content']['parts'][0]['text']));

        $pdf_url = $this->generate_pdf($generated_html);

        wp_send_json_success(['html' => $generated_html, 'pdf_url' => $pdf_url]);
    }


    private function generate_pdf($html_content)
    {
        $options = new Options();
        $options->set('defaultFont', 'Arial');
        $dompdf = new Dompdf($options);
        $dompdf->loadHtml($html_content);
        $dompdf->setPaper('A4', 'portrait');
        $dompdf->render();

        $upload_dir = wp_upload_dir();
        $current_user = wp_get_current_user();
        $username = sanitize_file_name($current_user->user_login);
        $pdf_path = $upload_dir['path'] . '/' . $username . '-' . time() . '.pdf';
        file_put_contents($pdf_path, $dompdf->output());

        $file_array = array(
            'name' => basename($pdf_path),
            'tmp_name' => $pdf_path,
        );

        $attachment_id = media_handle_sideload($file_array, 0);

        if (is_wp_error($attachment_id)) {
            return '';
        }

        return wp_get_attachment_url($attachment_id);
    }

    public function fetch_latest_pdf()
    {
        if (!is_user_logged_in()) {
            wp_send_json_error(['message' => 'User not logged in']);
        }

        $current_user = wp_get_current_user();
        $username = sanitize_file_name($current_user->user_login);

        $args = array(
            'post_type' => 'attachment',
            'post_mime_type' => 'application/pdf',
            'posts_per_page' => 1,
            'orderby' => 'date',
            'order' => 'DESC',
            'meta_query' => array(
                array(
                    'key' => '_wp_attached_file',
                    'value' => $username . '-', // Ensure it matches username in filename
                    'compare' => 'LIKE'
                )
            )
        );

        $latest_pdf = get_posts($args);

        if (empty($latest_pdf)) {
            wp_send_json_error(['message' => 'No PDFs found']);
        }

        $pdf_url = wp_get_attachment_url($latest_pdf[0]->ID);
        wp_send_json_success(['pdf_url' => $pdf_url]);
    }



    public function display_html_response()
    {
        ob_start(); ?>

        <div class="hero-section max-w-5xl mx-auto p-6 shadow-lg rounded-lg">
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6 items-center">
                <div>
                    <h1 class="text-4xl font-bold">Create Your Worksheet</h1>
                    <p class="text-lg text-gray-600 my-4">
                        Generate AI-powered worksheets or select from our templates to get started quickly.
                    </p>
                    <button id="select-template-btn" class="bg-gray-500 text-white px-4 py-2 rounded-lg mr-2">
                        Select Template
                    </button>
                    <button id="create-with-ai-btn" class="bg-blue-600 text-white px-4 py-2 rounded-lg">
                        Create with AI
                    </button>
                </div>
                <div class="hero-image-container">
                    <img src="<?php echo plugin_dir_url(__FILE__) . 'images/bgh.png'; ?>" class="w-full rounded-lg object-cover"
                        alt="Worksheet Image">
                </div>
            </div>
        </div>

        <div id="ai-overlay" class="fixed flex-col bg-black/30 backdrop-blur-md inset-0 shadow-2xl m-auto container p-3 hidden">
            <!-- Overlay Content -->
            <div class="bg-white w-full p-4 rounded-lg shadow-lg mx-auto h-full overflow-hidden">
                <!-- Navigation Bar -->
                <nav class="flex justify-between items-center bg-gray-100 p-3 rounded-md">
                    <!-- Tabs -->
                    <div class="flex space-x-4">
                        <button class="tab-button active px-4 py-2 rounded-md text-gray-700 font-semibold hover:bg-gray-200"
                            data-tab="templates">
                            Premade Templates
                        </button>
                        <button class="tab-button px-4 py-2 rounded-md text-gray-700 font-semibold hover:bg-gray-200"
                            data-tab="worksheets">
                            Premade Worksheets
                        </button>
                        <button class="tab-button px-4 py-2 rounded-md text-gray-700 font-semibold hover:bg-gray-200"
                            data-tab="ai-generation">
                            AI Generation
                        </button>
                    </div>

                    <!-- Google Login -->
                    <div id="google-login" class="flex items-center space-x-2 cursor-pointer">
                        <img src="google-icon.png" alt="Google" class="w-6 h-6">
                        <button class="text-blue-600 font-semibold">Sign in with Google</button>
                    </div>

                    <!-- Close Button -->
                    <button id="close-ai-overlay" class="text-gray-600 text-2xl">&times;</button>
                </nav>

                <!-- Dynamic Content Area -->
                <div id="tab-content" class="bg-white p-4 rounded-md mt-2 h-full overflow-y-auto w-full">
                    <!-- Premade Templates Tab -->
                    <div id="templates" class="tab-content">
                        <div class="flex gap-4">
                            <!-- Grid of Templates -->
                            <div id="template-grid" class="grid grid-cols-3 h-auto gap-4 w-2/3">
                                <!-- Templates are injected here by JavaScript -->
                            </div>

                            <!-- Preview Section -->
                            <div class="w-1/3 h-auto bg-gray-100 p-4 rounded-md">
                                <h3 class="text-lg font-semibold mb-2">Template Preview</h3>
                                <img id="template-preview"
                                    src="<?php echo plugin_dir_url(__FILE__) . 'images/placeholder.png'; ?>" alt="Preview"
                                    class="w-full rounded-md border">
                                <p id="template-name" class="text-center mt-2 text-gray-700">Select a template</p>
                            </div>
                        </div>
                    </div>

                    <!-- Premade Worksheets Tab -->
                    <div id="worksheets" class="tab-content hidden">
                        <p class="text-gray-700">Worksheets content here...</p>
                    </div>

                    <!-- AI Generation Tab -->
                    <div id="ai-generation" class="tab-content hidden">
                        <p class="text-gray-700">AI Generation content here...</p>
                    </div>
                </div>
            </div>
        </div>

        <script>
            document.addEventListener("DOMContentLoaded", function () {
                const overlay = document.getElementById("ai-overlay");
                const body = document.body;

                // Open AI Overlay
                document.getElementById("create-with-ai-btn").addEventListener("click", function () {
                    overlay.style.display = "flex";
                    body.classList.add("no-scroll");
                });

                // Close AI Overlay
                document.getElementById("close-ai-overlay")?.addEventListener("click", function () {
                    overlay.style.display = "none";
                    body.classList.remove("no-scroll");
                });

                // Handle tab navigation
                document.querySelectorAll('.tab-button').forEach(button => {
                    button.addEventListener('click', () => {
                        document.querySelectorAll('.tab-button').forEach(btn => btn.classList.remove('bg-gray-300', 'text-gray-900'));
                        button.classList.add('bg-gray-300', 'text-gray-900');

                        document.querySelectorAll('.tab-content').forEach(content => content.classList.add('hidden'));
                        document.getElementById(button.getAttribute('data-tab')).classList.remove('hidden');
                    });
                });

                // Default open first tab
                document.querySelector('.tab-button').click();

                // Template Selection Logic
                function setupTemplateSelection() {
                    document.getElementById('template-grid').addEventListener('click', (event) => {
                        const card = event.target.closest('.template-card');
                        if (!card) return;

                        const templateName = card.getAttribute('data-template');
                        const imageSrc = card.querySelector('img').src;

                        document.getElementById('template-preview').src = imageSrc;
                        document.getElementById('template-name').innerText = templateName.replace('template-', 'Template ').replace('premadeworksheet-', 'Worksheet ');
                    });
                }

                function loadTemplates() {
                    const templates = <?php echo json_encode(get_option('awg_templates', [])); ?>;
                    const templateGrid = document.getElementById('template-grid');
                    templateGrid.innerHTML = '';

                    if (templates.length === 0) {
                        templateGrid.innerHTML = "<p class='text-gray-500 text-center col-span-3'>No templates available.</p>";
                        return;
                    }

                    templates.forEach(template => {
                        const card = document.createElement('div');
                        card.className = "template-card bg-white p-3 h-fit rounded-lg shadow hover:shadow-lg transition-all cursor-pointer";
                        card.setAttribute('data-template', template.name);

                        card.innerHTML = `<img src="${template.image}" alt="${template.name}" class="w-full h-32 object-cover rounded-md border border-gray-300">
                                            <p class="text-center mt-2 font-medium text-gray-800">${template.name.replace('template-', 'Template ').replace('premadeworksheet-', 'Worksheet ')}</p> `;

                        templateGrid.appendChild(card);
                    });
                }

                // Initialize functions
                loadTemplates();
                setupTemplateSelection();
            });
        </script>

        <?php return ob_get_clean();
    }




    public function view_pdf()
    {
        $pdfs = get_posts([
            'post_type' => 'attachment',
            'post_mime_type' => 'application/pdf',
            'numberposts' => 5
        ]);

        if (empty($pdfs)) {
            return "<p>No PDFs available.</p>";
        }

        $output = "<div class='container mt-4 view-pdf'>
                       <div class='card shadow-sm'>
                           <h2 class='text-center mb-3'>Available PDFs</h2>
                           <ul class='awg-pdf-list'>";
        foreach ($pdfs as $pdf) {
            $output .= "<li><a href='" . esc_url(wp_get_attachment_url($pdf->ID)) . "' target='_blank' class='awg-pdf-item'>" . esc_html($pdf->post_title) . ".pdf" . "</a></li>";
        }
        $output .= "    </ul>
                       </div>
                   </div>";

        return $output;
    }
}

// Initialize the plugin
new AI_Worksheet_Generator();
?>

//////////////////////////////////////////////////////////// Finally tamed Gemini //////////////////////////////////////////////////////////

<?php
/**
 * Plugin Name: AI Worksheet Generator
 * Plugin URI:  https://yourwebsite.com
 * Description: Generate AI-powered worksheets.
 * Version:     1.0.1
 * Author:      Lewis Ng'ang'a
 * Author URI:  https://yourwebsite.com
 * License:     GPL2
 */

if (!defined('ABSPATH')) {
    exit; // Prevent direct access
}

require_once ABSPATH . 'wp-admin/includes/file.php'; // Needed for file handling
require_once ABSPATH . 'wp-admin/includes/media.php'; // Needed for uploading files
require_once ABSPATH . 'wp-admin/includes/image.php'; // Needed for attachment metadata

// Include dompdf for PDF generation
require_once plugin_dir_path(__FILE__) . 'vendor/autoload.php';
use Dompdf\Dompdf;
use Dompdf\Options;

class AI_Worksheet_Generator
{

    public function enqueue_assets()
    {
        // Enqueue Tailwind CSS from the official CDN
        wp_enqueue_script('tailwind-config', 'https://cdn.tailwindcss.com', array(), null, false);

        // Add inline script to configure Tailwind before it's used
        wp_add_inline_script('tailwind-config', 'tailwind.config = { theme: { extend: {} } }', 'before');
        wp_enqueue_style('awg-styles', plugin_dir_url(__FILE__) . 'css/styles.css');

    }

    public function __construct()
    {
        add_action('admin_enqueue_scripts', array($this, 'enqueue_assets'));
        add_action('wp_enqueue_scripts', array($this, 'enqueue_assets')); // If using front-end
        add_action('admin_menu', array($this, 'add_admin_menu'));
        add_action('admin_init', array($this, 'register_settings'));
        add_action('wp_ajax_generate_ai_response', array($this, 'generate_ai_response'));
        add_action('wp_ajax_fetch_latest_pdf', array($this, 'fetch_latest_pdf'));
        add_action('wp_ajax_nopriv_generate_ai_response', array($this, 'generate_ai_response'));
        add_action('admin_init', array($this, 'handle_template_upload'));
        add_shortcode('awg_generate_html', array($this, 'display_html_response'));
        add_shortcode('awg_view_pdf', array($this, 'view_pdf'));
    }


    public function add_admin_menu()
    {
        add_menu_page(
            'AI Worksheet Generator',
            'Worksheet AI',
            'manage_options',
            'ai-worksheet-generator',
            array($this, 'admin_page'),
            'dashicons-smiley'
        );
    }

    public function admin_page()
    {
        ?>
        <div class="wrap">
            <h2>AI Worksheet Generator</h2>

            <!-- API Key Section -->
            <form method="post" action="options.php">
                <?php
                settings_fields('awg_settings_group');
                do_settings_sections('awg_settings_page');
                submit_button();
                ?>
            </form>

            <!-- Template & Premade Worksheet Upload Section -->
            <h3>Manage Templates & Premade Worksheets</h3>
            <form method="post" enctype="multipart/form-data">
                <label for="template_name">Name:</label>
                <input type="text" name="template_name" required>

                <label for="template_type">Type:</label>
                <select name="template_type">
                    <option value="template">Template</option>
                    <option value="premadeworksheet">Premade Worksheet</option>
                </select>

                <label for="template_file">Upload HTML File:</label>
                <input type="file" name="template_file" accept=".html" required>

                <label for="template_image">Upload Preview Image:</label>
                <input type="file" name="template_image" accept="image/*" required>

                <input type="submit" name="upload_template" value="Upload">
            </form>

            <!-- Display Existing Templates -->
            <h3>Existing Templates & Worksheets</h3>
            <ul>
                <?php
                $templates = get_option('awg_templates', []);
                foreach ($templates as $template) {
                    echo "<li>{$template['name']} ({$template['type']}) - <a href='{$template['file']}'>View</a> | <img src='{$template['image']}' width='50'></li>";
                }
                ?>
            </ul>
        </div>
        <?php
    }

    public function register_settings()
    {
        register_setting('awg_settings_group', 'openai_api_key');
        register_setting('awg_settings_group', 'awg_templates'); // Store templates
        add_settings_section('awg_main_section', 'API Settings', null, 'awg_settings_page');
        add_settings_field('openai_api_key', 'OpenAI API Key', array($this, 'api_key_field'), 'awg_settings_page', 'awg_main_section');
    }

    public function api_key_field()
    {
        $api_key = get_option('openai_api_key', '');
        echo "<input type='text' name='openai_api_key' value='" . esc_attr($api_key) . "' style='width: 100%;'>";
    }

    // Handle template uploads
    public function handle_template_upload()
    {
        if (isset($_POST['upload_template'])) {
            $name = sanitize_text_field($_POST['template_name']);
            $type = sanitize_text_field($_POST['template_type']);
            $prefix = ($type == 'template') ? 'template-' : 'premadeworksheet-';

            // Handle file upload
            if (!empty($_FILES['template_file']['name']) && !empty($_FILES['template_image']['name'])) {
                $file_id = media_handle_upload('template_file', 0);
                $image_id = media_handle_upload('template_image', 0);

                if (!is_wp_error($file_id) && !is_wp_error($image_id)) {
                    $file_url = wp_get_attachment_url($file_id);
                    $image_url = wp_get_attachment_url($image_id);

                    $templates = get_option('awg_templates', []);
                    $templates[] = [
                        'name' => $prefix . $name,
                        'type' => $type,
                        'file' => $file_url,
                        'image' => $image_url
                    ];
                    update_option('awg_templates', $templates);
                }
            }
        }
    }



    public function generate_ai_response()
    {
        if (!isset($_POST['prompt'])) {
            wp_send_json_error(['message' => 'No prompt provided']);
        }

        $api_key = get_option('openai_api_key');
        if (!$api_key) {
            wp_send_json_error(['message' => 'OpenAI API key is not set']);
        }

        $prompt = sanitize_text_field($_POST['prompt']);

        $response = wp_remote_post('https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key=' . $api_key, array(
            'body' => json_encode(array(
                'contents' => array(
                    array(
                        'parts' => array(array("text" => $prompt))
                    )
                )
            )),
            'headers' => array(
                'Content-Type' => 'application/json'
            ),
            'timeout' => 30
        ));

        if (is_wp_error($response)) {
            wp_send_json_error(['message' => 'API request failed: ' . $response->get_error_message()]);
        }

        $body = json_decode(wp_remote_retrieve_body($response), true);

        if (!$body || !isset($body['candidates'][0]['content']['parts'][0]['text'])) {
            wp_send_json_error(['message' => 'Invalid response from Gemini. Response: ' . print_r($body, true)]);
        }

        // Extract generated content and remove unnecessary ```html blocks
        $generated_html = trim($body['candidates'][0]['content']['parts'][0]['text']);
        $generated_html = preg_replace('/^```html|```$/m', '', $generated_html); // Remove markdown fences

        // Extract inline CSS and move to <style> tags
        $updated_html = $this->extract_and_move_inline_css($generated_html);

        // Generate PDF from the cleaned HTML
        $pdf_url = $this->generate_pdf($updated_html);

        wp_send_json_success(['html' => $updated_html, 'pdf_url' => $pdf_url]);
    }

    /**
     * Extracts inline CSS from style attributes and moves them into a <style> block.
     */
    private function extract_and_move_inline_css($html)
    {
        $dom = new DOMDocument();
        libxml_use_internal_errors(true); // Suppress parsing errors
        $dom->loadHTML($html, LIBXML_HTML_NOIMPLIED | LIBXML_HTML_NODEFDTD);
        libxml_clear_errors();

        $styles = [];
        foreach ($dom->getElementsByTagName('*') as $element) {
            if ($element->hasAttribute('style')) {
                $tag = $element->nodeName;
                $style = $element->getAttribute('style');
                $class_name = 'custom-' . uniqid(); // Unique class name
                $element->removeAttribute('style');
                $element->setAttribute('class', $class_name);
                $styles[] = ".$class_name { $style }";
            }
        }

        $css = implode("\n", $styles);
        $style_tag = "<style>\n$css\n</style>\n";

        return $style_tag . $dom->saveHTML();
    }


    private function generate_pdf($html_content)
    {
        $options = new Options();
        $options->set('defaultFont', 'Arial');
        $dompdf = new Dompdf($options);
        $dompdf->loadHtml($html_content);
        $dompdf->setPaper('A4', 'portrait');
        $dompdf->render();

        $upload_dir = wp_upload_dir();
        $current_user = wp_get_current_user();
        $username = sanitize_file_name($current_user->user_login);
        $pdf_path = $upload_dir['path'] . '/' . $username . '-' . time() . '.pdf';
        file_put_contents($pdf_path, $dompdf->output());

        $file_array = array(
            'name' => basename($pdf_path),
            'tmp_name' => $pdf_path,
        );

        $attachment_id = media_handle_sideload($file_array, 0);

        if (is_wp_error($attachment_id)) {
            return '';
        }

        return wp_get_attachment_url($attachment_id);
    }

    public function fetch_latest_pdf()
    {
        if (!is_user_logged_in()) {
            wp_send_json_error(['message' => 'User not logged in']);
        }

        $current_user = wp_get_current_user();
        $username = sanitize_file_name($current_user->user_login);

        $args = array(
            'post_type' => 'attachment',
            'post_mime_type' => 'application/pdf',
            'posts_per_page' => 1,
            'orderby' => 'date',
            'order' => 'DESC',
            'meta_query' => array(
                array(
                    'key' => '_wp_attached_file',
                    'value' => $username . '-', // Ensure it matches username in filename
                    'compare' => 'LIKE'
                )
            )
        );

        $latest_pdf = get_posts($args);

        if (empty($latest_pdf)) {
            wp_send_json_error(['message' => 'No PDFs found']);
        }

        $pdf_url = wp_get_attachment_url($latest_pdf[0]->ID);
        wp_send_json_success(['pdf_url' => $pdf_url]);
    }



    public function display_html_response()
    {
        ob_start(); ?>

        <div class="hero-section max-w-5xl mx-auto p-6 shadow-lg rounded-lg">
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6 items-center">
                <div>
                    <h1 class="text-4xl font-bold">Create Your Worksheet</h1>
                    <p class="text-lg text-gray-600 my-4">
                        Generate AI-powered worksheets or select from our templates to get started quickly.
                    </p>
                    <button id="select-template-btn" class="bg-gray-500 text-white px-4 py-2 rounded-lg mr-2">
                        Select Template
                    </button>
                    <button id="create-with-ai-btn" class="bg-blue-600 text-white px-4 py-2 rounded-lg">
                        Create with AI
                    </button>
                </div>
                <div class="hero-image-container">
                    <img src="<?php echo plugin_dir_url(__FILE__) . 'images/bgh.png'; ?>" class="w-full rounded-lg object-cover"
                        alt="Worksheet Image">
                </div>
            </div>
        </div>

        <div id="ai-overlay" class="fixed flex-col bg-black/30 backdrop-blur-md inset-0 shadow-2xl m-auto container p-3 hidden">
            <!-- Overlay Content -->
            <div class="bg-white w-full p-4 rounded-lg shadow-lg mx-auto h-full overflow-hidden">
                <!-- Navigation Bar -->
                <nav class="flex justify-between items-center bg-gray-100 p-3 rounded-md">
                    <!-- Tabs -->
                    <div class="flex space-x-4">
                        <button class="tab-button active px-4 py-2 rounded-md text-gray-700 font-semibold hover:bg-gray-200"
                            data-tab="templates">
                            Premade Templates
                        </button>
                        <button class="tab-button px-4 py-2 rounded-md text-gray-700 font-semibold hover:bg-gray-200"
                            data-tab="worksheets">
                            Premade Worksheets
                        </button>
                        <button class="tab-button px-4 py-2 rounded-md text-gray-700 font-semibold hover:bg-gray-200"
                            data-tab="ai-generation">
                            AI Generation
                        </button>
                    </div>

                    <!-- Google Login -->
                    <div id="google-login" class="flex items-center space-x-2 cursor-pointer">
                        <img src="google-icon.png" alt="Google" class="w-6 h-6">
                        <button class="text-blue-600 font-semibold">Sign in with Google</button>
                    </div>

                    <!-- Close Button -->
                    <button id="close-ai-overlay" class="text-gray-600 text-2xl">&times;</button>
                </nav>

                <!-- Dynamic Content Area -->
                <div id="tab-content" class="bg-white p-4 rounded-md mt-2 h-full overflow-y-auto w-full">
                    <!-- Premade Templates Tab -->
                    <div id="templates" class="tab-content">
                        <div class="flex gap-4">
                            <!-- Grid of Templates -->
                            <div id="template-grid" class="grid grid-cols-3 h-auto gap-4 w-2/3">
                                <!-- Templates are injected here by JavaScript -->
                            </div>

                            <!-- Preview Section -->
                            <div class="w-1/3 h-auto bg-gray-100 p-4 rounded-md">
                                <h3 class="text-lg font-semibold mb-2">Template Preview</h3>
                                <img id="template-preview"
                                    src="<?php echo plugin_dir_url(__FILE__) . 'images/placeholder.png'; ?>" alt="Preview"
                                    class="w-full rounded-md border">
                                <p id="template-name" class="text-center mt-2 text-gray-700">Select a template</p>
                            </div>
                        </div>
                    </div>

                    <!-- Premade Worksheets Tab -->
                    <div id="worksheets" class="tab-content hidden">
                        <p class="text-gray-700">Worksheets content here...</p>
                    </div>

                    <!-- AI Generation Tab -->
                    <div id="ai-generation" class="tab-content hidden">
                        <div class="ai-content flex flex-col md:flex-row gap-6 p-6 bg-gray-100 rounded-lg shadow-lg">
                            <div class="ai-input-section w-full md:w-1/2 bg-white p-6 rounded-lg shadow-md">
                                <h2 class="text-xl font-semibold mb-4">Enter Your Prompt</h2>
                                <input type="text" id="awg-prompt"
                                    class="w-full p-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500"
                                    placeholder="Enter worksheet topic...">
                                <button id="awg-generate-btn"
                                    class="w-full mt-3 bg-blue-500 text-white py-2 px-4 rounded-md hover:bg-blue-600 transition">
                                    Generate Worksheet
                                </button>
                            </div>

                            <div class="ai-preview-section w-full md:w-1/2 bg-white p-6 rounded-lg shadow-md">
                                <h2 class="text-xl font-semibold mb-4">Live Preview</h2>
                                <div id="awg-html-output"
                                    class="preview-box border border-gray-300 p-4 rounded-md min-h-[200px]"></div>

                                <div id="awg-pdf-container" class="mt-6 hidden">
                                    <h3 class="text-center text-lg font-semibold">Generated Worksheet PDF</h3>
                                    <iframe id="awg-pdf-frame" class="w-full h-[500px] border-none"></iframe>

                                    <div id="awg-loading" class="text-center mt-3 hidden">
                                        <div
                                            class="animate-spin inline-block w-6 h-6 border-4 border-blue-500 border-t-transparent rounded-full">
                                        </div>
                                        <p class="mt-2 text-gray-600">Generating worksheet, please wait...</p>
                                    </div>

                                    <a id="awg-download-pdf"
                                        class="w-full mt-3 block text-center bg-green-500 text-white py-2 px-4 rounded-md hover:bg-green-600 transition"
                                        href="#" target="_blank" download>
                                        Download PDF
                                    </a>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
        </div>

        <script>
            document.addEventListener("DOMContentLoaded", function () {
                const overlay = document.getElementById("ai-overlay");
                const body = document.body;

                // Open AI Overlay
                document.getElementById("create-with-ai-btn").addEventListener("click", function () {
                    overlay.style.display = "flex";
                    body.classList.add("no-scroll");
                });

                // Close AI Overlay
                document.getElementById("close-ai-overlay")?.addEventListener("click", function () {
                    overlay.style.display = "none";
                    body.classList.remove("no-scroll");
                });

                // Handle tab navigation
                document.querySelectorAll('.tab-button').forEach(button => {
                    button.addEventListener('click', () => {
                        document.querySelectorAll('.tab-button').forEach(btn => btn.classList.remove('bg-gray-300', 'text-gray-900'));
                        button.classList.add('bg-gray-300', 'text-gray-900');

                        document.querySelectorAll('.tab-content').forEach(content => content.classList.add('hidden'));
                        document.getElementById(button.getAttribute('data-tab')).classList.remove('hidden');
                    });
                });

                // Default open first tab
                document.querySelector('.tab-button').click();

                // Template Selection Logic
                function setupTemplateSelection() {
                    document.getElementById('template-grid').addEventListener('click', (event) => {
                        const card = event.target.closest('.template-card');
                        if (!card) return;

                        const templateName = card.getAttribute('data-template');
                        const imageSrc = card.querySelector('img').src;

                        document.getElementById('template-preview').src = imageSrc;
                        document.getElementById('template-name').innerText = templateName.replace('template-', 'Template ').replace('premadeworksheet-', 'Worksheet ');
                    });
                }

                function loadTemplates() {
                    const templates = <?php echo json_encode(get_option('awg_templates', [])); ?>;
                    const templateGrid = document.getElementById('template-grid');
                    templateGrid.innerHTML = '';

                    if (templates.length === 0) {
                        templateGrid.innerHTML = "<p class='text-gray-500 text-center col-span-3'>No templates available.</p>";
                        return;
                    }

                    templates.forEach(template => {
                        const card = document.createElement('div');
                        card.className = "template-card bg-white p-3 h-fit rounded-lg shadow hover:shadow-lg transition-all cursor-pointer";
                        card.setAttribute('data-template', template.name);

                        card.innerHTML = `<img src="${template.image}" alt="${template.name}" class="w-full h-32 object-cover rounded-md border border-gray-300">
                                            <p class="text-center mt-2 font-medium text-gray-800">${template.name.replace('template-', 'Template ').replace('premadeworksheet-', 'Worksheet ')}</p> `;

                        templateGrid.appendChild(card);
                    });
                }

                // Initialize functions
                loadTemplates();
                setupTemplateSelection();

                //AI Overlay Tab
                document.getElementById("awg-generate-btn").addEventListener("click", function () {
                    let userPrompt = document.getElementById("awg-prompt").value;
                    if (!userPrompt) return;

                    document.getElementById("awg-loading").style.display = "block";
                    document.getElementById("awg-html-output").style.display = "none";
                    document.getElementById("awg-pdf-container").style.display = "none";

                    fetch("<?php echo admin_url('admin-ajax.php'); ?>", {
                        method: "POST",
                        headers: { "Content-Type": "application/x-www-form-urlencoded" },
                        body: "action=generate_ai_response&prompt=" + encodeURIComponent(userPrompt)
                    })
                        .then(response => response.json())
                        .then(jsonData => {
                            document.getElementById("awg-loading").style.display = "none";

                            if (jsonData.success) {
                                document.getElementById("awg-html-output").innerHTML = jsonData.html;
                                document.getElementById("awg-html-output").style.display = "block";

                                let checkPdfInterval = setInterval(() => {
                                    fetch("<?php echo admin_url('admin-ajax.php'); ?>?action=fetch_latest_pdf")
                                        .then(response => response.json())
                                        .then(pdfData => {
                                            if (pdfData.success) {
                                                clearInterval(checkPdfInterval);
                                                document.getElementById("awg-pdf-frame").src = pdfData.pdf_url;
                                                document.getElementById("awg-download-pdf").href = pdfData.pdf_url;
                                                document.getElementById("awg-pdf-container").style.display = "block";
                                            }
                                        });
                                }, 3000);
                            } else {
                                alert("Error: " + jsonData.message);
                            }
                        })
                        .catch(error => {
                            document.getElementById("awg-loading").style.display = "none";
                            console.error("Fetch Error:", error);
                            alert("An unexpected error occurred.");
                        });
                });

            });
        </script>

        <?php return ob_get_clean();
    }




    public function view_pdf()
    {
        $pdfs = get_posts([
            'post_type' => 'attachment',
            'post_mime_type' => 'application/pdf',
            'numberposts' => 5
        ]);

        if (empty($pdfs)) {
            return "<p>No PDFs available.</p>";
        }

        $output = "<div class='container mt-4 view-pdf'>
                       <div class='card shadow-sm'>
                           <h2 class='text-center mb-3'>Available PDFs</h2>
                           <ul class='awg-pdf-list'>";
        foreach ($pdfs as $pdf) {
            $output .= "<li><a href='" . esc_url(wp_get_attachment_url($pdf->ID)) . "' target='_blank' class='awg-pdf-item'>" . esc_html($pdf->post_title) . ".pdf" . "</a></li>";
        }
        $output .= "    </ul>
                       </div>
                   </div>";

        return $output;
    }
}

// Initialize the plugin
new AI_Worksheet_Generator();
?>









//================================================================ Customize Worksheet =================================================================
<?php
/**
 * Plugin Name: AI Worksheet Generator
 * Plugin URI:  https://yourwebsite.com
 * Description: Generate AI-powered worksheets.
 * Version:     1.0.1
 * Author:      Lewis Ng'ang'a
 * Author URI:  https://yourwebsite.com
 * License:     GPL2
 */

if (!defined('ABSPATH')) {
    exit; // Prevent direct access
}

require_once ABSPATH . 'wp-admin/includes/file.php'; // Needed for file handling
require_once ABSPATH . 'wp-admin/includes/media.php'; // Needed for uploading files
require_once ABSPATH . 'wp-admin/includes/image.php'; // Needed for attachment metadata

// Include dompdf for PDF generation
require_once plugin_dir_path(__FILE__) . 'vendor/autoload.php';
use Dompdf\Dompdf;
use Dompdf\Options;

class AI_Worksheet_Generator
{

    private $generated_html;


    public function enqueue_assets()
    {
        // Enqueue Tailwind CSS from the official CDN
        wp_enqueue_script('tailwind-config', 'https://cdn.tailwindcss.com', array(), null, false);

        // Add inline script to configure Tailwind before it's used
        wp_add_inline_script('tailwind-config', 'tailwind.config = { theme: { extend: {} } }', 'before');
        wp_enqueue_style('awg-styles', plugin_dir_url(__FILE__) . 'css/styles.css');

    }

    public function __construct()
    {
        add_action('admin_enqueue_scripts', array($this, 'enqueue_assets'));
        add_action('wp_enqueue_scripts', array($this, 'enqueue_assets')); // If using front-end
        add_action('admin_menu', array($this, 'add_admin_menu'));
        add_action('admin_init', array($this, 'register_settings'));
        add_action('wp_ajax_generate_ai_response', array($this, 'generate_ai_response'));
        add_action('wp_ajax_fetch_latest_pdf', array($this, 'fetch_latest_pdf'));
        add_action('wp_ajax_nopriv_generate_ai_response', array($this, 'generate_ai_response'));
        add_action('admin_init', array($this, 'handle_template_upload'));
        add_action('wp_ajax_fetch_generated_html', [$this, 'fetch_generated_html']);
        add_action('wp_ajax_save_custom_template', function () {
            if (isset($_POST['html'])) {
                $customHtml = stripslashes($_POST['html']);
                $filePath = WP_CONTENT_DIR . '/uploads/custom_template.html';
                file_put_contents($filePath, $customHtml);
                echo "Template saved!";
            }
            wp_die();
        });

        add_action('wp_ajax_nopriv_fetch_generated_html', [$this, 'fetch_generated_html']); // Allow non-logged-in users if needed
        add_shortcode('awg_generate_html', array($this, 'display_html_response'));
        add_shortcode('awg_view_pdf', array($this, 'view_pdf'));
    }


    public function add_admin_menu()
    {
        add_menu_page(
            'AI Worksheet Generator',
            'Worksheet AI',
            'manage_options',
            'ai-worksheet-generator',
            array($this, 'admin_page'),
            'dashicons-smiley'
        );
    }

    public function admin_page()
    {
        ?>
        <div class="wrap">
            <h2>AI Worksheet Generator</h2>

            <!-- Tab Navigation -->
            <ul class="nav-tab-wrapper">
                <li><a href="#" class="nav-tab nav-tab-active" data-tab="settings">Settings</a></li>
                <li><a href="#" class="nav-tab" data-tab="content">Content</a></li>
                <li><a href="#" class="nav-tab" data-tab="statistics">Statistics</a></li>
            </ul>

            <!-- Tab Content -->
            <div class="tab-content">
                <!-- Settings Tab -->
                <div id="settings" class="tab-pane active">
                    <h3>API Key Settings</h3>
                    <form method="post" action="options.php">
                        <?php
                        settings_fields('awg_settings_group');
                        do_settings_sections('awg_settings_page');
                        submit_button();
                        ?>
                    </form>
                </div>

                <!-- Content Tab -->
                <div id="content" class="tab-pane">
                    <h3>Manage Templates & Premade Worksheets</h3>
                    <form method="post" enctype="multipart/form-data">
                        <label for="template_name">Name:</label>
                        <input type="text" name="template_name" required>

                        <label for="template_type">Type:</label>
                        <select name="template_type">
                            <option value="template">Template</option>
                            <option value="premadeworksheet">Premade Worksheet</option>
                        </select>

                        <label for="template_category">Category:</label>
                        <select name="template_category">
                            <option value="math">Math</option>
                            <option value="science">Science</option>
                            <option value="history">History</option>
                            <option value="language">Language</option>
                            <option value="other">Other</option>
                        </select>

                        <label for="template_file">Upload HTML File:</label>
                        <input type="file" name="template_file" accept=".html" required>

                        <label for="template_image">Upload Preview Image:</label>
                        <input type="file" name="template_image" accept="image/*" required>

                        <input type="submit" name="upload_template" value="Upload">
                    </form>

                    <!-- Display Existing Templates -->
                    <h3>Existing Templates & Worksheets</h3>
                    <ul>
                        <?php
                        $templates = get_option('awg_templates', []);
                        foreach ($templates as $template) {
                            echo "<li>{$template['name']} ({$template['type']} - {$template['category']}) - 
                            <a href='{$template['file']}'>View</a> | 
                            <img src='{$template['image']}' width='50'></li>";
                        }
                        ?>
                    </ul>
                </div>

                <!-- Statistics Tab -->
                <div id="statistics" class="tab-pane">
                    <h3>Usage & Payment Statistics</h3>
                    <table class="wp-list-table widefat fixed striped">
                        <thead>
                            <tr>
                                <th>User</th>
                                <th>Usage</th>
                                <th>Payment Status</th>
                            </tr>
                        </thead>
                        <tbody>
                            <?php
                            $users = get_option('awg_users', []);
                            foreach ($users as $user) {
                                echo "<tr>
                                        <td>{$user['name']}</td>
                                        <td>{$user['usage_count']} worksheets</td>
                                        <td>{$user['payment_status']}</td>
                                      </tr>";
                            }
                            ?>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <style>
            /* Style only inputs inside #content */
            #content input[type="text"],
            #content select,
            #content input[type="file"] {
                width: 100%;
                padding: 8px;
                margin: 5px 0 15px;
                border: 1px solid #ccc;
                border-radius: 4px;
                font-size: 14px;
                background: #fff;
            }

            /* Make the dropdowns and text fields uniform */
            #content select {
                cursor: pointer;
            }

            /* Style labels */
            #content label {
                font-weight: bold;
                display: block;
                margin-top: 10px;
            }

            /* Style the upload button */
            #content input[type="submit"] {
                background: #0073aa;
                color: white;
                padding: 10px 15px;
                border: none;
                border-radius: 4px;
                cursor: pointer;
                font-size: 14px;
                transition: background 0.3s ease;
            }

            #content input[type="submit"]:hover {
                background: #005e8a;
            }

            /* Style the template list */
            #content ul {
                list-style: none;
                padding: 0;
            }

            #content ul li {
                background: #f9f9f9;
                padding: 10px;
                border-left: 4px solid #0073aa;
                display: flex;
                align-items: center;
                justify-content: space-between;
                border-radius: 4px;
                margin-top: 10px;

            }

            #content ul li img {
                border-radius: 4px;
                width: 50px;
                height: auto;
                margin-left: 10px;
            }
        </style>

        <!-- JavaScript for Tab Switching -->
        <script>
            document.addEventListener('DOMContentLoaded', function () {
                let tabs = document.querySelectorAll('.nav-tab');
                let panes = document.querySelectorAll('.tab-pane');

                function showTab(tabId) {
                    panes.forEach(pane => {
                        pane.style.display = pane.id === tabId ? 'block' : 'none';
                    });

                    tabs.forEach(tab => {
                        tab.classList.toggle('nav-tab-active', tab.dataset.tab === tabId);
                    });
                }

                // Set initial tab (first tab active)
                showTab('settings');

                tabs.forEach(tab => {
                    tab.addEventListener('click', function (event) {
                        event.preventDefault();
                        showTab(this.dataset.tab);
                    });
                });
            });
        </script>

        <?php
    }


    public function register_settings()
    {
        register_setting('awg_settings_group', 'openai_api_key');
        register_setting('awg_settings_group', 'awg_templates'); // Store templates
        add_settings_section('awg_main_section', 'API Settings', null, 'awg_settings_page');
        add_settings_field('openai_api_key', 'API Key', array($this, 'api_key_field'), 'awg_settings_page', 'awg_main_section');
    }

    public function api_key_field()
    {
        $api_key = get_option('openai_api_key', '');
        echo "<input type='text' name='openai_api_key' value='" . esc_attr($api_key) . "' style='width: 100%;'>";
    }

    // Handle template uploads
    public function handle_template_upload()
    {
        if (isset($_POST['upload_template'])) {
            $name = sanitize_text_field($_POST['template_name']);
            $type = sanitize_text_field($_POST['template_type']);
            $prefix = ($type == 'template') ? 'template-' : 'premadeworksheet-';

            // Handle file upload
            if (!empty($_FILES['template_file']['name']) && !empty($_FILES['template_image']['name'])) {
                $file_id = media_handle_upload('template_file', 0);
                $image_id = media_handle_upload('template_image', 0);

                if (!is_wp_error($file_id) && !is_wp_error($image_id)) {
                    $file_url = wp_get_attachment_url($file_id);
                    $image_url = wp_get_attachment_url($image_id);

                    $templates = get_option('awg_templates', []);
                    $templates[] = [
                        'name' => $prefix . $name,
                        'type' => $type,
                        'file' => $file_url,
                        'image' => $image_url
                    ];
                    update_option('awg_templates', $templates);
                }
            }
        }
    }



    public function generate_ai_response()
    {
        if (!isset($_POST['prompt'])) {
            wp_send_json_error(['message' => 'No prompt provided']);
        }

        $api_key = get_option('openai_api_key');
        if (!$api_key) {
            wp_send_json_error(['message' => 'API key is not set']);
        }

        $prompt = sanitize_text_field($_POST['prompt']);

        $response = wp_remote_post('https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key=' . $api_key, array(
            'body' => json_encode(array(
                'contents' => array(
                    array(
                        'parts' => array(array("text" => $prompt))
                    )
                )
            )),
            'headers' => array(
                'Content-Type' => 'application/json'
            ),
            'timeout' => 30
        ));

        if (is_wp_error($response)) {
            wp_send_json_error(['message' => 'API request failed: ' . $response->get_error_message()]);
        }

        $body = json_decode(wp_remote_retrieve_body($response), true);

        if (!$body || !isset($body['candidates'][0]['content']['parts'][0]['text'])) {
            wp_send_json_error(['message' => 'Invalid response from Gemini. Response: ' . print_r($body, true)]);
        }

        // Extract generated content and clean it
        $this->generated_html = trim($body['candidates'][0]['content']['parts'][0]['text']);
        $this->generated_html = preg_replace('/^```html|```$/m', '', $this->generated_html); // Remove markdown fences

        // Extract inline CSS and move to <style> tags
        $updated_html = $this->extract_and_move_inline_css($this->generated_html);

        // Generate PDF from the cleaned HTML
        $pdf_url = $this->generate_pdf($updated_html);

        wp_send_json_success(['html' => $updated_html, 'pdf_url' => $pdf_url]);
    }

    /**
     * Extracts inline CSS from style attributes and moves them into a <style> block.
     */
    private function extract_and_move_inline_css($html)
    {
        $dom = new DOMDocument();
        libxml_use_internal_errors(true); // Suppress parsing errors
        $dom->loadHTML($html, LIBXML_HTML_NOIMPLIED | LIBXML_HTML_NODEFDTD);
        libxml_clear_errors();

        $styles = [];
        foreach ($dom->getElementsByTagName('*') as $element) {
            if ($element->hasAttribute('style')) {
                $tag = $element->nodeName;
                $style = $element->getAttribute('style');
                $class_name = 'custom-' . uniqid(); // Unique class name
                $element->removeAttribute('style');
                $element->setAttribute('class', $class_name);
                $styles[] = ".$class_name { $style }";
            }
        }

        $css = implode("\n", $styles);
        $style_tag = "<style>\n$css\n</style>\n";

        return $style_tag . $dom->saveHTML();
    }


    private function generate_pdf($html_content)
    {
        $options = new Options();
        $options->set('defaultFont', 'Arial');
        $dompdf = new Dompdf($options);
        $dompdf->loadHtml($html_content);
        $dompdf->setPaper('A4', 'portrait');
        $dompdf->render();

        $upload_dir = wp_upload_dir();
        $current_user = wp_get_current_user();
        $username = sanitize_file_name($current_user->user_login);
        $pdf_path = $upload_dir['path'] . '/' . $username . '-' . time() . '.pdf';
        file_put_contents($pdf_path, $dompdf->output());

        $file_array = array(
            'name' => basename($pdf_path),
            'tmp_name' => $pdf_path,
        );

        $attachment_id = media_handle_sideload($file_array, 0);

        if (is_wp_error($attachment_id)) {
            return '';
        }

        return wp_get_attachment_url($attachment_id);
    }

    public function fetch_generated_html()
    {
        if (!isset($this->generated_html)) {
            wp_send_json_error(['message' => 'No generated content available']);
        }

        wp_send_json_success(['html' => $this->generated_html]);
    }



    public function fetch_latest_pdf()
    {
        if (!is_user_logged_in()) {
            wp_send_json_error(['message' => 'User not logged in']);
        }

        $current_user = wp_get_current_user();
        $username = sanitize_file_name($current_user->user_login);

        $args = array(
            'post_type' => 'attachment',
            'post_mime_type' => 'application/pdf',
            'posts_per_page' => 1,
            'orderby' => 'date',
            'order' => 'DESC',
            'meta_query' => array(
                array(
                    'key' => '_wp_attached_file',
                    'value' => $username . '-', // Ensure it matches username in filename
                    'compare' => 'LIKE'
                )
            )
        );

        $latest_pdf = get_posts($args);

        if (empty($latest_pdf)) {
            wp_send_json_error(['message' => 'No PDFs found']);
        }

        $pdf_url = wp_get_attachment_url($latest_pdf[0]->ID);
        wp_send_json_success(['pdf_url' => $pdf_url]);
    }



    public function display_html_response()
    {
        ob_start(); ?>

        <div class="hero-section max-w-5xl mx-auto flex flex-col p-6 shadow-lg rounded-lg">
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6 items-center">
                <div>
                    <h1 class="text-4xl font-bold">Create Your Worksheet</h1>
                    <p class="text-lg text-gray-600 my-4">
                        Generate AI-powered worksheets or select from our templates to get started quickly.
                    </p>
                    <button id="select-template-btn" class="bg-gray-500 text-white px-4 py-2 rounded-lg mr-2">
                        Start with a Template
                    </button>
                    <button id="create-with-ai-btn" class="bg-blue-600 text-white px-4 py-2 rounded-lg">
                        Create with AI
                    </button>
                </div>
                <div class="hero-image-container">
                    <img src="<?php echo plugin_dir_url(__FILE__) . 'images/bgh.png'; ?>" class="w-full rounded-lg object-cover"
                        alt="Worksheet Image">
                </div>
            </div>
        </div>


        <!-- Template Overlay -->
        <div id="template-overlay"
            class="fixed flex flex-col bg-black/30 backdrop-blur-md inset-0 shadow-2xl m-auto container p-3 hidden">
            <div class="bg-white p-5 rounded-lg shadow-lg w-full max-w-5xl mx-auto relative">
                <button id="close-overlay" class="absolute top-3 right-3 text-black text-lg">✖</button>

                <h2 class="text-xl font-bold mb-3">Customize Template</h2>

                <div class="flex flex-col md:flex-row gap-4">
                    <!-- Left Panel: Customization Options -->
                    <div class="w-full md:w-1/3 p-3 bg-gray-100 rounded-lg shadow">
                        <label for="template_select" class="block font-medium">Select Template:</label>
                        <select id="template_select" class="w-full p-2 border rounded">
                            <option value="">-- Select a Template --</option>
                            <?php
                            $templates = get_option('awg_templates', []);
                            foreach ($templates as $template) {
                                echo "<option value='{$template['file']}'>" . esc_html($template['name']) . "</option>";
                            }
                            ?>
                        </select>

                        <button id="load_template" class="bg-blue-500 text-white px-4 py-2 rounded-lg w-full mt-2">
                            Load Template
                        </button>

                        <h3 class="text-lg font-semibold mt-4">Add Sections</h3>
                        <button class="add-section bg-green-500 text-white px-3 py-1 rounded w-full mt-2" data-type="text">Add
                            Text</button>
                        <button class="add-section bg-purple-500 text-white px-3 py-1 rounded w-full mt-2" data-type="image">Add
                            Image</button>
                        <button class="add-section bg-red-500 text-white px-3 py-1 rounded w-full mt-2" data-type="table">Add
                            Table</button>

                        <h3 class="text-lg font-semibold mt-4">Section Styling</h3>
                        <label class="block font-medium">Background Color:</label>
                        <input type="color" id="bg_color" class="w-full mt-1 p-2 rounded border">

                        <label class="block font-medium mt-2">Text Color:</label>
                        <input type="color" id="text_color" class="w-full mt-1 p-2 rounded border">
                    </div>

                    <!-- Right Panel: Live Preview -->
                    <div class="w-full md:w-2/3 p-3 bg-white rounded-lg shadow">
                        <h3 class="text-lg font-semibold">Template Preview</h3>
                        <iframe id="template_frame" class="w-full h-96 border"></iframe>
                    </div>
                </div>

                <button id="save_template" class="bg-blue-600 text-white px-4 py-2 rounded-lg mt-3 w-full">
                    Save Customized Template
                </button>
            </div>
        </div>



        <div id="ai-overlay" class="fixed flex-col bg-black/30 backdrop-blur-md inset-0 shadow-2xl m-auto container p-3 hidden">
            <!-- Overlay Content -->
            <div class="bg-white w-full p-4 rounded-lg shadow-lg mx-auto h-full overflow-y-auto overflow-x-hidden">
                <!-- Navigation Bar -->
                <nav class="flex justify-between items-center bg-gray-100 p-3 rounded-md">
                    <!-- Tabs -->
                    <div class="flex space-x-4">
                        <button class="tab-button active px-4 py-2 rounded-md text-gray-700 font-semibold hover:bg-gray-200"
                            data-tab="templates">
                            Premade Templates
                        </button>
                        <button class="tab-button px-4 py-2 rounded-md text-gray-700 font-semibold hover:bg-gray-200"
                            data-tab="worksheets">
                            Premade Worksheets
                        </button>
                        <button class="tab-button px-4 py-2 rounded-md text-gray-700 font-semibold hover:bg-gray-200"
                            data-tab="ai-generation">
                            AI Generation
                        </button>
                    </div>

                    <!-- Google Login -->
                    <div id="google-login" class="flex items-center space-x-2 cursor-pointer">
                        <!-- <img src="google-icon.png" alt="Google" class="w-6 h-6">
                        <button class="text-blue-600 font-semibold">Sign in with Google</button> -->
                        <a href="http://localhost/mywordpress/wp-login.php?loginSocial=google" data-plugin="nsl"
                            data-action="connect" data-redirect="current" data-provider="google" data-popupwidth="600"
                            data-popupheight="600">
                            <img src="Image url" alt="" />
                        </a>
                    </div>

                    <!-- Close Button -->
                    <button id="close-ai-overlay" class="text-gray-600 text-2xl">&times;</button>
                </nav>

                <!-- Dynamic Content Area -->
                <div id="tab-content" class="bg-white p-4 rounded-md mt-2 h-full overflow-y-auto w-full">
                    <!-- Premade Templates Tab -->
                    <div id="templates" class="tab-content">
                        <div class="flex gap-4">
                            <!-- Grid of Templates -->
                            <div id="template-grid" class="grid grid-cols-3 h-auto gap-4 w-2/3">
                                <!-- Templates are injected here by JavaScript -->
                            </div>

                            <!-- Preview Section -->
                            <div class="w-1/3 h-auto bg-gray-100 p-4 rounded-md">
                                <h3 class="text-lg font-semibold mb-2">Template Preview</h3>
                                <img id="template-preview"
                                    src="<?php echo plugin_dir_url(__FILE__) . 'images/placeholder.png'; ?>" alt="Preview"
                                    class="w-full rounded-md border">
                                <p id="template-name" class="text-center mt-2 text-gray-700">Select a template</p>
                            </div>
                        </div>
                    </div>

                    <!-- Premade Worksheets Tab -->
                    <div id="worksheets" class="tab-content hidden">
                        <p class="text-gray-700">Worksheets content here...</p>
                    </div>

                    <!-- AI Generation Tab -->
                    <div id="ai-generation" class="tab-content hidden overflow-auto h-full">
                        <div
                            class="ai-content flex flex-col md:flex-row gap-4 p-4 bg-gray-100 rounded-lg shadow-lg h-full md:overflow-y-auto">

                            <!-- AI Input Section -->
                            <div class="ai-input-section w-full md:w-1/2 bg-white p-4 rounded-lg shadow-md flex flex-col">
                                <h2 class="text-lg font-semibold mb-3">Enter Your Prompt</h2>

                                <!-- Guidelines Section -->
                                <div class="bg-blue-50 border-l-4 border-blue-500 p-3 rounded-md mb-3">
                                    <h3 class="text-blue-700 font-semibold">Guidelines:</h3>
                                    <ul class="list-disc pl-5 text-sm text-gray-700">
                                        <li>Specify the topic clearly.</li>
                                        <li>Define the number and type of questions.</li>
                                        <li>Mention difficulty level (Beginner, Intermediate, Advanced).</li>
                                        <li>Request additional elements like solutions or explanations.</li>
                                    </ul>
                                </div>

                                <textarea id="awg-prompt"
                                    class="w-full p-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 resize-none min-h-[130px] flex-1"
                                    placeholder="Example: \n- Topic: College-Level Grammar\n- Questions: 5 sentence correction + 5 fill-in-the-blanks\n- Difficulty: Advanced\n- Include an explanation for answers"></textarea>
                                <button id="awg-generate-btn"
                                    class="w-full mt-2 bg-blue-500 text-white py-2 px-4 rounded-md hover:bg-blue-600 transition">
                                    Generate Worksheet
                                </button>
                            </div>

                            <!-- AI Preview Section -->
                            <div
                                class="ai-preview-section w-full md:w-1/2 bg-white p-4 rounded-lg shadow-md relative flex flex-col">
                                <h2 class="text-lg font-semibold mb-3">Preview</h2>

                                <!-- Download & Print Strip -->
                                <div id="awg-action-strip"
                                    class="hidden  justify-between items-center bg-gray-200 p-2 rounded-md mb-3">
                                    <span class="text-gray-700 font-medium">Download or Print:</span>
                                    <div class="flex gap-2">
                                        <button id="awg-print-btn"
                                            class="bg-blue-500 text-white px-3 py-1 rounded-md hover:bg-blue-600">
                                            Print
                                        </button>
                                        <a id="awg-download-pdf"
                                            class="bg-green-500 text-white px-3 py-1 rounded-md hover:bg-green-600 transition"
                                            href="#" target="_blank" download>
                                            Download PDF
                                        </a>
                                    </div>
                                </div>

                                <!-- Live Preview with Loading -->
                                <div id="awg-html-output"
                                    class="preview-box border border-gray-300 p-3 rounded-md flex-1 bg-gray-50 flex justify-center items-center relative overflow-auto">
                                    <img id="awg-placeholder"
                                        src="<?php echo plugin_dir_url(__FILE__) . 'images/placeholder.png'; ?>"
                                        alt="Worksheet Preview Placeholder" class="max-w-full h-auto">
                                    <div id="awg-loading" class="absolute hidden">
                                        <div
                                            class="animate-spin inline-block w-8 h-8 border-4 border-blue-500 border-t-transparent rounded-full">
                                        </div>
                                        <p class="mt-2 text-gray-600">Generating worksheet...</p>
                                    </div>
                                </div>

                                <!-- PDF Container -->
                                <div id="awg-pdf-container" class="mt-3 hidden">
                                    <h3 class="text-center text-md font-semibold">Generated Worksheet PDF</h3>
                                    <iframe id="awg-pdf-frame" class="w-full h-[500px] border-none"></iframe>
                                </div>
                            </div>
                        </div>
                    </div>


                </div>
            </div>
        </div>
        </div>

        <script>
            document.addEventListener("DOMContentLoaded", function () {
                const overlay = document.getElementById("ai-overlay");
                const body = document.body;

                // Open AI Overlay
                document.getElementById("create-with-ai-btn").addEventListener("click", function () {
                    overlay.style.display = "flex";
                    body.classList.add("no-scroll");
                });

                // Close AI Overlay
                document.getElementById("close-ai-overlay")?.addEventListener("click", function () {
                    overlay.style.display = "none";
                    body.classList.remove("no-scroll");
                });

                // Handle tab navigation
                document.querySelectorAll('.tab-button').forEach(button => {
                    button.addEventListener('click', () => {
                        document.querySelectorAll('.tab-button').forEach(btn => btn.classList.remove('bg-gray-300', 'text-gray-900'));
                        button.classList.add('bg-gray-300', 'text-gray-900');

                        document.querySelectorAll('.tab-content').forEach(content => content.classList.add('hidden'));
                        document.getElementById(button.getAttribute('data-tab')).classList.remove('hidden');
                    });
                });

                // Default open first tab
                document.querySelector('.tab-button').click();

                // Template Selection Logic
                function setupTemplateSelection() {
                    document.getElementById('template-grid').addEventListener('click', (event) => {
                        const card = event.target.closest('.template-card');
                        if (!card) return;

                        const templateName = card.getAttribute('data-template');
                        const imageSrc = card.querySelector('img').src;

                        document.getElementById('template-preview').src = imageSrc;
                        document.getElementById('template-name').innerText = templateName.replace('template-', 'Template ').replace('premadeworksheet-', 'Worksheet ');
                    });
                }

                function loadTemplates() {
                    const templates = <?php echo json_encode(get_option('awg_templates', [])); ?>;
                    const templateGrid = document.getElementById('template-grid');
                    templateGrid.innerHTML = '';

                    if (templates.length === 0) {
                        templateGrid.innerHTML = "<p class='text-gray-500 text-center col-span-3'>No templates available.</p>";
                        return;
                    }

                    templates.forEach(template => {
                        const card = document.createElement('div');
                        card.className = "template-card bg-white p-3 h-fit rounded-lg shadow hover:shadow-lg transition-all cursor-pointer";
                        card.setAttribute('data-template', template.name);

                        card.innerHTML = `<img src="${template.image}" alt="${template.name}" class="w-full h-32 object-cover rounded-md border border-gray-300">
                                            <p class="text-center mt-2 font-medium text-gray-800">${template.name.replace('template-', 'Template ').replace('premadeworksheet-', 'Worksheet ')}</p> `;

                        templateGrid.appendChild(card);
                    });
                }

                // Initialize functions
                loadTemplates();
                setupTemplateSelection();

                //AI Overlay Tab
                document.getElementById("awg-generate-btn").addEventListener("click", function () {
                    let userPrompt = document.getElementById("awg-prompt").value;
                    if (!userPrompt) return;

                    document.getElementById("awg-loading").style.display = "block";
                    document.getElementById("awg-html-output").style.display = "none";
                    document.getElementById("awg-pdf-container").style.display = "none";

                    fetch("<?php echo admin_url('admin-ajax.php'); ?>", {
                        method: "POST",
                        headers: { "Content-Type": "application/x-www-form-urlencoded" },
                        body: "action=generate_ai_response&prompt=" + encodeURIComponent(userPrompt)
                    })
                        .then(response => response.json())
                        .then(jsonData => {
                            document.getElementById("awg-loading").style.display = "none";

                            if (jsonData.success) {
                                console.log("JSON data: ", jsonData);
                                document.getElementById("awg-html-output").innerHTML = jsonData.data.html;
                                console.log("html: ", jsonData.html);
                                document.getElementById("awg-html-output").style.display = "block";

                                let checkPdfInterval = setInterval(() => {
                                    fetch("<?php echo admin_url('admin-ajax.php'); ?>?action=fetch_latest_pdf")
                                        .then(response => response.json())
                                        .then(pdfData => {
                                            if (pdfData.success) {
                                                clearInterval(checkPdfInterval);
                                                document.getElementById("awg-pdf-frame").src = pdfData.pdf_url;
                                                document.getElementById("awg-download-pdf").href = pdfData.pdf_url;
                                                document.getElementById("awg-pdf-container").style.display = "block";
                                            }
                                        });
                                }, 3000);
                            } else {
                                alert("Error: " + jsonData.message);
                            }
                        })
                        .catch(error => {
                            document.getElementById("awg-loading").style.display = "none";
                            console.error("Fetch Error:", error);
                            alert("An unexpected error occurred.");
                        });
                });

                fetch("<?php echo admin_url('admin-ajax.php'); ?>?action=check_payment_status")
                    .then(response => response.json())
                    .then(jsonData => {
                        if (jsonData.success && jsonData.paid) {
                            document.getElementById("awg-action-strip").classList.remove("hidden");
                        }
                    })
                    .catch(error => console.error("Error checking payment status:", error));


                //Template Overlay
                const template_overlay = document.getElementById("template-overlay");
                const openBtn = document.getElementById("select-template-btn");
                const closeBtn = document.getElementById("close-overlay");

                const templateSelect = document.getElementById("template_select");
                const loadButton = document.getElementById("load_template");
                const templateFrame = document.getElementById("template_frame");
                const addSectionButtons = document.querySelectorAll(".add-section");
                const saveButton = document.getElementById("save_template");

                const bgColorInput = document.getElementById("bg_color");
                const textColorInput = document.getElementById("text_color");

                let templateDoc;
                let selectedElement = null;

                // Show overlay when clicking "Start with a Template"
                openBtn.addEventListener("click", () => {
                    template_overlay.classList.remove("hidden");
                    body.classList.add("no-scroll");

                });

                // Close overlay when clicking "✖"
                closeBtn.addEventListener("click", () => {
                    template_overlay.classList.add("hidden");
                    body.classList.remove("no-scroll");
                });

                // Load the selected template into the iframe
                loadButton.addEventListener("click", function () {
                    const selectedTemplate = templateSelect.value;
                    if (selectedTemplate) {
                        fetch(selectedTemplate)
                            .then(response => response.text())
                            .then(html => {
                                templateFrame.contentDocument.open();
                                templateFrame.contentDocument.write(html);
                                templateFrame.contentDocument.close();
                                templateDoc = templateFrame.contentDocument;
                            });
                    }
                });

                // Add predefined sections
                addSectionButtons.forEach(button => {
                    button.addEventListener("click", function () {
                        if (!templateDoc) {
                            alert("Please load a template first!");
                            return;
                        }

                        const body = templateDoc.body;
                        let newElement;

                        if (this.dataset.type === "text") {
                            newElement = templateDoc.createElement("div");
                            newElement.innerHTML = "<p contenteditable='true'>Editable Text</p>";
                            newElement.style.padding = "10px";
                            newElement.style.border = "1px dashed #0073aa";
                            newElement.style.margin = "10px 0";
                            newElement.style.cursor = "pointer";
                        } else if (this.dataset.type === "image") {
                            newElement = templateDoc.createElement("img");
                            newElement.src = "https://via.placeholder.com/150";
                            newElement.style.display = "block";
                            newElement.style.margin = "10px auto";
                            newElement.style.cursor = "pointer";
                        } else if (this.dataset.type === "table") {
                            newElement = templateDoc.createElement("table");
                            newElement.innerHTML = "<tr><td contenteditable='true'>Edit</td><td contenteditable='true'>Me</td></tr>";
                            newElement.style.width = "100%";
                            newElement.style.border = "1px solid #000";
                            newElement.style.cursor = "pointer";
                        }

                        if (newElement) {
                            body.appendChild(newElement);

                            newElement.addEventListener("click", function () {
                                selectedElement = this;
                            });
                        }
                    });
                });

                // Change background and text color
                bgColorInput.addEventListener("input", function () {
                    if (selectedElement) {
                        selectedElement.style.backgroundColor = this.value;
                    }
                });

                textColorInput.addEventListener("input", function () {
                    if (selectedElement) {
                        selectedElement.style.color = this.value;
                    }
                });

                // Save the customized template
                saveButton.addEventListener("click", function () {
                    if (!templateDoc) {
                        alert("No template loaded!");
                        return;
                    }

                    const newHtml = templateDoc.documentElement.outerHTML;
                    fetch("<?php echo admin_url('admin-ajax.php'); ?>", {
                        method: "POST",
                        headers: { "Content-Type": "application/x-www-form-urlencoded" },
                        body: "action=save_custom_template&html=" + encodeURIComponent(newHtml)
                    }).then(response => response.text())
                        .then(data => alert("Template Saved!"));
                });
            });

        </script>

        <?php return ob_get_clean();
    }


    public function customize_template_page()
    {
        ?>
        <div class="wrap">
            <h2>Customize Template</h2>

            <label for="template_select">Select Template:</label>
            <select id="template_select">
                <option value="">-- Select a Template --</option>
                <?php
                $templates = get_option('awg_templates', []);
                foreach ($templates as $template) {
                    echo "<option value='{$template['file']}'>{$template['name']}</option>";
                }
                ?>
            </select>

            <button id="load_template">Load Template</button>

            <h3>Template Preview & Customization</h3>
            <div id="template_editor">
                <iframe id="template_frame" style="width:100%; height:400px; border:1px solid #ccc;"></iframe>
            </div>

            <h3>Add Sections</h3>
            <button class="add-section" data-type="text">Add Text Block</button>
            <button class="add-section" data-type="image">Add Image</button>
            <button class="add-section" data-type="table">Add Table</button>

            <button id="save_template">Save Customized Template</button>
        </div>

        <script>
            document.addEventListener("DOMContentLoaded", function () {
                const templateSelect = document.getElementById("template_select");
                const loadButton = document.getElementById("load_template");
                const templateFrame = document.getElementById("template_frame");
                const addSectionButtons = document.querySelectorAll(".add-section");
                const saveButton = document.getElementById("save_template");

                let templateDoc;

                // Load the selected template into an iframe
                loadButton.addEventListener("click", function () {
                    const selectedTemplate = templateSelect.value;
                    if (selectedTemplate) {
                        fetch(selectedTemplate)
                            .then(response => response.text())
                            .then(html => {
                                templateFrame.contentDocument.open();
                                templateFrame.contentDocument.write(html);
                                templateFrame.contentDocument.close();
                                templateDoc = templateFrame.contentDocument;
                            });
                    }
                });

                // Add predefined sections
                addSectionButtons.forEach(button => {
                    button.addEventListener("click", function () {
                        if (!templateDoc) {
                            alert("Please load a template first!");
                            return;
                        }

                        const body = templateDoc.body;
                        let newElement;

                        if (this.dataset.type === "text") {
                            newElement = templateDoc.createElement("div");
                            newElement.innerHTML = "<p>New Text Block</p>";
                            newElement.style.padding = "10px";
                            newElement.style.border = "1px dashed #0073aa";
                            newElement.style.margin = "10px 0";
                        } else if (this.dataset.type === "image") {
                            newElement = templateDoc.createElement("img");
                            newElement.src = "https://via.placeholder.com/150";
                            newElement.style.display = "block";
                            newElement.style.margin = "10px auto";
                        } else if (this.dataset.type === "table") {
                            newElement = templateDoc.createElement("table");
                            newElement.innerHTML = "<tr><td>Cell 1</td><td>Cell 2</td></tr>";
                            newElement.style.width = "100%";
                            newElement.style.border = "1px solid #000";
                        }

                        if (newElement) {
                            body.appendChild(newElement);
                        }
                    });
                });

                // Save the customized template
                saveButton.addEventListener("click", function () {
                    if (!templateDoc) {
                        alert("No template loaded!");
                        return;
                    }

                    const newHtml = templateDoc.documentElement.outerHTML;
                    fetch("<?php echo admin_url('admin-ajax.php'); ?>", {
                        method: "POST",
                        headers: { "Content-Type": "application/x-www-form-urlencoded" },
                        body: "action=save_custom_template&html=" + encodeURIComponent(newHtml)
                    }).then(response => response.text())
                        .then(data => alert("Template Saved!"));
                });
            });
        </script>

        <style>
            #template_editor {
                border: 1px solid #ccc;
                padding: 10px;
                background: #f9f9f9;
            }

            button {
                background: #0073aa;
                color: white;
                padding: 8px 12px;
                border: none;
                cursor: pointer;
                margin-right: 5px;
                transition: 0.3s;
            }

            button:hover {
                background: #005e8a;
            }
        </style>
        <?php
    }



    public function view_pdf()
    {
        $pdfs = get_posts([
            'post_type' => 'attachment',
            'post_mime_type' => 'application/pdf',
            'numberposts' => 5
        ]);

        if (empty($pdfs)) {
            return "<p>No PDFs available.</p>";
        }

        $output = "<div class='container mt-4 view-pdf'>
                       <div class='card shadow-sm'>
                           <h2 class='text-center mb-3'>Available PDFs</h2>
                           <ul class='awg-pdf-list'>";
        foreach ($pdfs as $pdf) {
            $output .= "<li><a href='" . esc_url(wp_get_attachment_url($pdf->ID)) . "' target='_blank' class='awg-pdf-item'>" . esc_html($pdf->post_title) . ".pdf" . "</a></li>";
        }
        $output .= "    </ul>
                       </div>
                   </div>";

        return $output;
    }
}

// Initialize the plugin
new AI_Worksheet_Generator();
?>